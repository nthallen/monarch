#! /usr/bin/perl -w
use strict;

my %ID;
my %IDfound;
load_id();

open(my $lsusbt, '-|', "lsusb -tvv") or
  die "Cannot run lsusb -tvv\n";

my %devnum;
my $curdevnum = '';
while (my $line = <$lsusbt>) {
  if ($line =~ m/ Port \d+: Dev (\d+),/) {
    $curdevnum = $1;
  } elsif ($line =~ m|/sys/bus/usb/devices/([^ ]+) |) {
    $devnum{$1} = $curdevnum;
  }
}
close($lsusbt);

print "# usb_enum: ", scalar(localtime()), "\n";

my @serdevs = </sys/bus/usb/devices/*:*/tty*>;
# print "Devices:\n", map("  $_\n", @serdevs);
for my $devstr (@serdevs) {
  $devstr =~ m|^/sys/bus/usb/devices/([^:]+):([^/]+)/(.*)$| ||
    die "Pattern did not match\n";
  my $usbt = $1;
  my $if = $2;
  my $port = "/dev/$3";
  my $devnum = $devnum{$usbt};
  open(my $lsusb, '-|', "lsusb -s1:$devnum -v 2>/dev/null | grep iSerial") or
    die "Unable to open lsusb pipe\n";
  my $line = <$lsusb>;
  close($lsusb) or warn "Error closing lsusb pipe\n";
  chomp $line;
  $line =~ m/iSerial \s+ \d+ \s+ (\S+)$/x ||
    die "Bad iSerial: '$line'";
  my $SN = $1;
  if ($ID{"$SN:$if"}) {
    print $ID{"$SN:$if"}, "_port=$port\n";
    $IDfound{"$SN:$if"} = 1;
  } else {
    print "# Unidentified board found, SN $SN:$if, devnum $devnum on $port\n";
  }
}

for my $snif (keys(%ID)) {
  print "$ID{$snif}_port=''\n" unless $IDfound{$snif};
}

sub load_id {
  my @idpath = qw(.);
  defined($ENV{TMBINDIR}) &&
    unshift(@idpath, $ENV{TMBINDIR});
  while (@idpath) {
    my $dir = pop(@idpath);
    my $path = "$dir/USB.id";
    if ( -f $path ) {
      load_id_path($path);
      return;
    }
  }
}

sub load_id_path {
  my $path = shift(@_);
  open(my $idfile, '<', $path) ||
    warn "usb_enum: Unable to open '$path'\n";
  while (my $line = <$idfile>) {
    chomp $line;
    next if $line =~ m/^\s*(?:#.*)?$/;
    if ($line =~ m/^ \s* ([\w_]+) \s+ ([a-z0-9]+) ((?::\d+\.\d+)?) \s* $/ix) {
      my $mnc = $1;
      my $sn = $2;
      my $if = $3 || ":1.0";
      $ID{"$sn$if"} = $mnc;
    }
  }
}
