<package> tm_ip_relay
<include> "tm_ip_relay.h"
<include> msg oui
<include> host_session
<follow> msg

<defs>
void tm_ip_relay_init_options(int argc, char **argv)
{
  int optltr;

  optind = OPTIND_RESET;
  opterr = 0;
  while ((optltr = getopt(argc, argv, opt_string)) != -1) {
    switch (optltr) {
      case 'E': set_cross_exp(optarg); break;
      case 'f': tm_ip_relay::init_options(optarg); break;
      default:
        break;
    }
  }
}

<init>
  tm_ip_relay_init_options(argc, argv);

<opts> "E:f:"
<sort>
  -E <Exp> Set remote Experiment for tm_ip_import to <Exp>
  -f <subrelay options file>

<unsort>
subrelay config: colon-separated list of:
  - serio_pkt_type code letter
  - service name
  - packet prefix (hex escapes OK, e.g. \\xAA\\xAA)
  - mlf configuration string
Host_Session function tm_gen: Where to locate serin
Host_Session function Relay: Where to locate tm_ip_import

<package> appid_default
<include> "dasio/appid.h"
<defs>
  DAS_IO::AppID_t DAS_IO::AppID("TMIPR", "tm_ip_relay", "V1.0");
