cmake_minimum_required(VERSION 2.8.8...3.20.0)
cmake_policy(SET CMP0048 NEW)
project(cmdgen VERSION 2.0.1)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

if (NOT ${CMAKE_CROSSCOMPILING})

find_package(FLEX REQUIRED)
find_package(BISON REQUIRED)

FLEX_TARGET(CmdScanner yylex.l ${CMAKE_CURRENT_BINARY_DIR}/yylex.c
            COMPILE_FLAGS "-i -L")
BISON_TARGET(CmdParser yyparse.y ${CMAKE_CURRENT_BINARY_DIR}/yyparse.c)
ADD_FLEX_BISON_DEPENDENCY(CmdScanner CmdParser)

set(CURSES_NEED_NCURSES, TRUE)

include( ../../oui_setup.cmake )
OUI_FILE(cmdgen.oui c)

add_executable(cmdgen cmdgen.c dstructs.c interfaces.c prompts.c
    rules.c states.c trie.c vunion.c ${CMAKE_CURRENT_BINARY_DIR}/cmdgenoui.c
    ${BISON_CmdParser_OUTPUT_SOURCE}
    ${FLEX_CmdScanner_OUTPUTS})
target_include_directories(cmdgen PRIVATE
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${monarch_SOURCE_DIR}/libs/nl
  ${monarch_tools_SOURCE_DIR}/oui/src)
target_link_libraries(cmdgen nl)
install(TARGETS cmdgen RUNTIME
        DESTINATION bin)
install(PROGRAMS cmdgen_version
        DESTINATION bin)
install(FILES cmdgen.skel
        DESTINATION share/monarch/skel)

endif (NOT ${CMAKE_CROSSCOMPILING})

install(FILES cmdalgo.h
        DESTINATION include)

# cmdgenoui.c is generated by:
#   oui -o cmdgenoui.c cmdgen.oui
